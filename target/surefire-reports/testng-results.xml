<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="79" ignored="0" total="166" passed="87">
  <reporter-output>
    <line>
      <![CDATA[Enter data 2009/ 2/ 17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/ 2/ 17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/ 4/ 31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/ 4/ 31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/ 4/ 31
]]>
    </line>
    <line>
      <![CDATA[Enter data 17 14 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17 14 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 2 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 2 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29 2 2012
]]>
    </line>
    <line>
      <![CDATA[Enter data 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2 12 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2 12 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2 12 0002
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 2 17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 2 17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 4 31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 4 31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 4 31
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010 2 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010 2 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 2 29
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010/ 2/ 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010/ 2/ 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/ 2/ 29
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009- -2 -17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009- -2 -17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009- -2 -17
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009-/ -2/ -17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009-/ -2/ -17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/ -2/ -17
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 14 17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 14 17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/ 14/ 17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/ 14/ 17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012 2 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012 2 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012/ 2/ 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012/ 2/ 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/ 13/ 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/ 13/ 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002/ 12/ 02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002/ 12/ 02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/ 12/ 02
]]>
    </line>
    <line>
      <![CDATA[Enter data 2019/ 2/ $$
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2019/ 2/ $$
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/ 2/ $$
]]>
    </line>
    <line>
      <![CDATA[Enter data 02 17 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02 17 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 17/02/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17/02/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/02/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data      04 31 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as      04 31 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04 31 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 31/04/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 31/04/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data   02 29 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as   02 29 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02 29 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data 29/02/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29/02/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data -17/-02/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -17/-02/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-02/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 17/14/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17/14/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 29/02/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29/02/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/02/2012
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Enter data $$/02/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as $$/02/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/02/17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/02/17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002 12 02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002 12 02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002 12 02
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2019 2 $$
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2019 2 $$
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019 2 $$
]]>
    </line>
    <line>
      <![CDATA[Enter data 04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 17 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 17 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Enter data   Apr 31 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as   Apr 31 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 29 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 29 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data 14/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 14/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/29/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/29/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 29 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 29 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data Dec 02 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as Dec 02 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb $$ 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb $$ 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$ 2019
]]>
    </line>
    <line>
      <![CDATA[Enter data $$/02/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as $$/02/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/04/31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/04/31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/04/31
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010/02/29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010/02/29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/02/29
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009-/-02/-17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009-/-02/-17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-02/-17
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/14/17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/14/17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012/02/29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012/02/29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Enter data 2019/02/$$
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2019/02/$$
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/02/$$
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data      04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as      04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04/31/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data Dec 32 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Dec 32 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 17 Feb 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17 Feb 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data   31 Apr 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as   31 Apr 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 Feb 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 Feb 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data -17 Feb -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -17 Feb -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 Feb 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 Feb 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 02 Dec 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02 Dec 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 30 Feb 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 30 Feb 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 30 Feb 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 Feb 17 
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 Feb 17 
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 Apr 31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 Apr 31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Apr 31
]]>
    </line>
    <line>
      <![CDATA[Enter data   02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as   02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02/29/2010
]]>
    </line>
    <line>
      <![CDATA[Enter data -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 14/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 14/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/29/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/29/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 12/02/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 12/02/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 02/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data February ,17, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as February ,17, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data   April ,31, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as   April ,31, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   April ,31, 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data February ,29, 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as February ,29, 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is February ,29, 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010 Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010 Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009 Feb -17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009 Feb -17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009 Feb -17
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012 Feb 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012 Feb 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002 Dec 02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002 Dec 02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009 Feb 30
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009 Feb 30
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Feb 30
]]>
    </line>
    <line>
      <![CDATA[Enter data 17 Feb, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17 Feb, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data   31 Apr, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as   31 Apr, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr, 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 Feb, 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 Feb, 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb, 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data -17 Feb, -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -17 Feb, -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb, -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 Feb, 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 Feb, 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data February , -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as February , -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is February , -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data February , 29, 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as February , 29, 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data December, 02, 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as December, 02, 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data February , $$ , 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as February , $$ , 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is February , $$ , 2019
]]>
    </line>
    <line>
      <![CDATA[Enter data February ,30 ,2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as February ,30 ,2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is February ,30 ,2009
]]>
    </line>
    <line>
      <![CDATA[Enter data December, 32, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as December, 32, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data      4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as      4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data   2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as   2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Enter data -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 02 Dec, 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02 Dec, 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 32 Dec, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 32 Dec, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009, Feb 17 
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009, Feb 17 
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009, Apr 31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009, Apr 31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009, Apr 31
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010, Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010, Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010, Feb 29 
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009, Feb -17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009, Feb -17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009, Feb -17
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012, Feb 29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012, Feb 29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002, Dec 02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002, Dec 02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data  2009, Dec 32 
]]>
    </line>
    <line>
      <![CDATA[Entered value as  2009, Dec 32 
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 17, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 17, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2/29/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2/29/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/1/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/1/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 12/2/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 12/2/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 17/2/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17/2/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/2/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 31/4/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 31/4/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 29/2/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29/2/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data -17/-2/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -17/-2/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-2/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 17/14/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17/14/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 29/2/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29/2/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/2/2012
]]>
    </line>
    <line>
      <![CDATA[Enter data   Apr 31, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as   Apr 31, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31, 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 29, 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 29, 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29, 2010
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17, -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb 29, 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb 29, 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data Dec 02, 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as Dec 02, 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data Feb $$, 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as Feb $$, 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$, 2019
]]>
    </line>
    <line>
      <![CDATA[Enter data Dec 32, 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as Dec 32, 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2/12/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2/12/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2/12/0002
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/2/17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/2/17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/4/31
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/4/31
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/4/31
]]>
    </line>
    <line>
      <![CDATA[Enter data 2010/2/29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2010/2/29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/2/29
]]>
    </line>
    <line>
      <![CDATA[Enter data -2009-/-2/-17
]]>
    </line>
    <line>
      <![CDATA[Entered value as -2009-/-2/-17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-2/-17
]]>
    </line>
    <line>
      <![CDATA[Enter data 2009/14/17
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2009/14/17
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 2012/2/29
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2012/2/29
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13/13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Entered value as 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02
]]>
    </line>
    <line>
      <![CDATA[Enter data 2019/2/$$
]]>
    </line>
    <line>
      <![CDATA[Entered value as 2019/2/$$
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/2/$$
]]>
    </line>
    <line>
      <![CDATA[Enter data  2/17/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as  2/17/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data       4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as       4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is       4/31/2009
]]>
    </line>
    <line>
      <![CDATA[Enter data    2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as    2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is    2/29/2010
]]>
    </line>
    <line>
      <![CDATA[Enter data  -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as  -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -2/-17/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data  2/29/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as  2/29/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data  13/ 1/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as  13/ 1/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 12/ 2/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 12/ 2/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data  2/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as  2/$$/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 17 / 2 /2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17 / 2 /2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 / 2 /2009
]]>
    </line>
    <line>
      <![CDATA[Enter data -02 -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -02 -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02 -17 -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data 14 17 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 14 17 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 02 29 2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02 29 2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 13 13 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 12 02 0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as 12 02 0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[Enter data 02 $$ 2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as 02 $$ 2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 17 2 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 17 2 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 2 2009
]]>
    </line>
    <line>
      <![CDATA[Enter data  31/ 4/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as  31/ 4/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 31 4 2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as 31 4 2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data  29/ 2/2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as  29/ 2/2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data 29 2 2010
]]>
    </line>
    <line>
      <![CDATA[Entered value as 29 2 2010
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data  -17/ -2/-2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as  -17/ -2/-2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -17/ -2/-2009
]]>
    </line>
    <line>
      <![CDATA[Enter data -17 -2 -2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as -17 -2 -2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 -2 -2009
]]>
    </line>
    <line>
      <![CDATA[Enter data  17/ 14/2009
]]>
    </line>
    <line>
      <![CDATA[Entered value as  17/ 14/2009
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data  29/ 2/2012
]]>
    </line>
    <line>
      <![CDATA[Entered value as  29/ 2/2012
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  29/ 2/2012
]]>
    </line>
    <line>
      <![CDATA[Enter data  13/ 13/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as  13/ 13/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
    <line>
      <![CDATA[Enter data  02/ 12/0002
]]>
    </line>
    <line>
      <![CDATA[Entered value as  02/ 12/0002
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
    </line>
    <line>
      <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is  02/ 12/0002
]]>
    </line>
    <line>
      <![CDATA[Enter data  $$/ 2/2019
]]>
    </line>
    <line>
      <![CDATA[Entered value as  $$/ 2/2019
]]>
    </line>
    <line>
      <![CDATA[Tap on Submit
]]>
    </line>
    <line>
      <![CDATA[Submitted
]]>
    </line>
    <line>
      <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
    </line>
  </reporter-output>
  <suite name="propinTest" duration-ms="530984" started-at="2020-06-12T18:44:03 IST" finished-at="2020-06-12T18:52:53 IST">
    <groups>
    </groups>
    <test name="TestDataParsing" duration-ms="530984" started-at="2020-06-12T18:44:03 IST" finished-at="2020-06-12T18:52:53 IST">
      <class name="test.propin.TestDateParsing">
        <test-method status="PASS" signature="openTheUrl()[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="openTheUrl" is-config="true" duration-ms="2926" started-at="2020-06-12T18:44:03 IST" finished-at="2020-06-12T18:44:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTheUrl -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:06 IST" finished-at="2020-06-12T18:44:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@34ea86ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="72" started-at="2020-06-12T18:44:06 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2903" started-at="2020-06-12T18:44:06 IST" data-provider="testData" finished-at="2020-06-12T18:44:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[88]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2c444798]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/ 2/ 17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/ 2/ 17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="347" started-at="2020-06-12T18:44:09 IST" finished-at="2020-06-12T18:44:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/ 2/ 17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:10 IST" finished-at="2020-06-12T18:44:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4bcf08ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2829" started-at="2020-06-12T18:44:10 IST" data-provider="testData" finished-at="2020-06-12T18:44:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[89]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7726e185]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/ 4/ 31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/ 4/ 31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/ 4/ 31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/ 4/ 31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/ 4/ 31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:10 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="172" started-at="2020-06-12T18:44:13 IST" finished-at="2020-06-12T18:44:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/ 4/ 31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:13 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2720" started-at="2020-06-12T18:44:13 IST" data-provider="testData" finished-at="2020-06-12T18:44:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@742d4e15]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 17 14 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17 14 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:13 IST" finished-at="2020-06-12T18:44:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a7f2247]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="238" started-at="2020-06-12T18:44:16 IST" finished-at="2020-06-12T18:44:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17 14 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:16 IST" finished-at="2020-06-12T18:44:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4946dfde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:16 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3400" started-at="2020-06-12T18:44:16 IST" data-provider="testData" finished-at="2020-06-12T18:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1da6ee17]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29 2 2012 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29 2 2012 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 2 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 2 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29 2 2012
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="206" started-at="2020-06-12T18:44:20 IST" finished-at="2020-06-12T18:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 2 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:20 IST" finished-at="2020-06-12T18:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@77972964]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2777" started-at="2020-06-12T18:44:20 IST" data-provider="testData" finished-at="2020-06-12T18:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[112]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2bfeb1ef]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="141" started-at="2020-06-12T18:44:23 IST" finished-at="2020-06-12T18:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13 13 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:23 IST" finished-at="2020-06-12T18:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@794f937a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2760" started-at="2020-06-12T18:44:23 IST" data-provider="testData" finished-at="2020-06-12T18:44:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[113]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2228db21]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2 12 0002 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2 12 0002 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2 12 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2 12 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2 12 0002
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:23 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="124" started-at="2020-06-12T18:44:27 IST" finished-at="2020-06-12T18:44:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2 12 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:27 IST" finished-at="2020-06-12T18:44:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7aa1fb0e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2862" started-at="2020-06-12T18:44:27 IST" data-provider="testData" finished-at="2020-06-12T18:44:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[114]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@e93f3d5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 2 17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 2 17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:27 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:44:30 IST" finished-at="2020-06-12T18:44:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 2 17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:30 IST" finished-at="2020-06-12T18:44:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5e663ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:30 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2728" started-at="2020-06-12T18:44:30 IST" data-provider="testData" finished-at="2020-06-12T18:44:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[115]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@66908383]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 4 31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 4 31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 4 31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 4 31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 4 31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="140" started-at="2020-06-12T18:44:33 IST" finished-at="2020-06-12T18:44:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 4 31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:33 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:33 IST" finished-at="2020-06-12T18:44:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4b74a67a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2818" started-at="2020-06-12T18:44:33 IST" data-provider="testData" finished-at="2020-06-12T18:44:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[116]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4905c46b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 2 29 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 2 29 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010 2 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010 2 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 2 29
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:44:36 IST" finished-at="2020-06-12T18:44:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010 2 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:37 IST" finished-at="2020-06-12T18:44:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4e25282d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:37 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2823" started-at="2020-06-12T18:44:37 IST" data-provider="testData" finished-at="2020-06-12T18:44:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6090f3ca]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/ 2/ 29 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/ 2/ 29 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010/ 2/ 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010/ 2/ 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/ 2/ 29
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:44:40 IST" finished-at="2020-06-12T18:44:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010/ 2/ 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:40 IST" finished-at="2020-06-12T18:44:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b29d36c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2733" started-at="2020-06-12T18:44:40 IST" data-provider="testData" finished-at="2020-06-12T18:44:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[117]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@726a17c4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009- -2 -17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009- -2 -17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009- -2 -17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009- -2 -17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009- -2 -17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:40 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="112" started-at="2020-06-12T18:44:43 IST" finished-at="2020-06-12T18:44:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009- -2 -17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:43 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2779" started-at="2020-06-12T18:44:43 IST" data-provider="testData" finished-at="2020-06-12T18:44:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[91]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@614aeccc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/ -2/ -17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/ -2/ -17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009-/ -2/ -17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009-/ -2/ -17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/ -2/ -17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:43 IST" finished-at="2020-06-12T18:44:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@d641499]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:44:47 IST" finished-at="2020-06-12T18:44:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009-/ -2/ -17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2801" started-at="2020-06-12T18:44:47 IST" data-provider="testData" finished-at="2020-06-12T18:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[118]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5eb97ced]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 14 17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 14 17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:47 IST" finished-at="2020-06-12T18:44:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@634d3439]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:47 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="119" started-at="2020-06-12T18:44:50 IST" finished-at="2020-06-12T18:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 14 17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:50 IST" finished-at="2020-06-12T18:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@44e0c3d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2725" started-at="2020-06-12T18:44:50 IST" data-provider="testData" finished-at="2020-06-12T18:44:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[92]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6e1f8469]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/ 14/ 17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/ 14/ 17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:50 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:44:52 IST" finished-at="2020-06-12T18:44:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/ 14/ 17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:53 IST" finished-at="2020-06-12T18:44:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@71891d6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2816" started-at="2020-06-12T18:44:53 IST" data-provider="testData" finished-at="2020-06-12T18:44:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[119]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@121c54fa]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012 2 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012 2 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:53 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:44:55 IST" finished-at="2020-06-12T18:44:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012 2 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:55 IST" finished-at="2020-06-12T18:44:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5ce41f1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2784" started-at="2020-06-12T18:44:55 IST" data-provider="testData" finished-at="2020-06-12T18:44:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[93]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5a8ba37c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012/ 2/ 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012/ 2/ 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:55 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="116" started-at="2020-06-12T18:44:58 IST" finished-at="2020-06-12T18:44:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012/ 2/ 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:44:58 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:44:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:44:58 IST" finished-at="2020-06-12T18:44:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@56820446]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2822" started-at="2020-06-12T18:44:58 IST" data-provider="testData" finished-at="2020-06-12T18:45:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[94]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4f8b4bd0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/ 13/ 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/ 13/ 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:45:01 IST" finished-at="2020-06-12T18:45:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/ 13/ 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:01 IST" finished-at="2020-06-12T18:45:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2259d54f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2757" started-at="2020-06-12T18:45:01 IST" data-provider="testData" finished-at="2020-06-12T18:45:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6411d3c8]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/ 12/ 02 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/ 12/ 02 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002/ 12/ 02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002/ 12/ 02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/ 12/ 02
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:01 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="111" started-at="2020-06-12T18:45:05 IST" finished-at="2020-06-12T18:45:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002/ 12/ 02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:05 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:05 IST" finished-at="2020-06-12T18:45:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b82f62a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2728" started-at="2020-06-12T18:45:05 IST" data-provider="testData" finished-at="2020-06-12T18:45:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[96]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@327c7bea]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/ 2/ $$ expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/ 2/ $$ expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2019/ 2/ $$
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2019/ 2/ $$
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/ 2/ $$
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:45:08 IST" finished-at="2020-06-12T18:45:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2019/ 2/ $$
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:08 IST" finished-at="2020-06-12T18:45:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@67e21ea2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:08 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2863" started-at="2020-06-12T18:45:08 IST" data-provider="testData" finished-at="2020-06-12T18:45:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[97]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3701e6e4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02 17 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02 17 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:45:11 IST" finished-at="2020-06-12T18:45:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02 17 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:11 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:11 IST" finished-at="2020-06-12T18:45:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2184962c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2760" started-at="2020-06-12T18:45:11 IST" data-provider="testData" finished-at="2020-06-12T18:45:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@60acd609]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/02/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/02/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 17/02/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17/02/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/02/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:45:14 IST" finished-at="2020-06-12T18:45:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17/02/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:14 IST" finished-at="2020-06-12T18:45:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4d9bccfe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:14 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2827" started-at="2020-06-12T18:45:14 IST" data-provider="testData" finished-at="2020-06-12T18:45:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[98]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@45667d98]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04 31 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04 31 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data      04 31 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as      04 31 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04 31 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="123" started-at="2020-06-12T18:45:18 IST" finished-at="2020-06-12T18:45:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data      04 31 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:18 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2926" started-at="2020-06-12T18:45:18 IST" data-provider="testData" finished-at="2020-06-12T18:45:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@43a51d00]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 31/04/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 31/04/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:18 IST" finished-at="2020-06-12T18:45:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@412440c1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:45:21 IST" finished-at="2020-06-12T18:45:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 31/04/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:21 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:21 IST" finished-at="2020-06-12T18:45:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@36c45149]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="4225" started-at="2020-06-12T18:45:21 IST" data-provider="testData" finished-at="2020-06-12T18:45:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6b2e0f78]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02 29 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02 29 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   02 29 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as   02 29 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02 29 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:45:26 IST" finished-at="2020-06-12T18:45:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   02 29 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:26 IST" finished-at="2020-06-12T18:45:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@33f4844b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:26 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3205" started-at="2020-06-12T18:45:26 IST" data-provider="testData" finished-at="2020-06-12T18:45:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@351f2244]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 29/02/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29/02/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:45:29 IST" finished-at="2020-06-12T18:45:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29/02/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:29 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:29 IST" finished-at="2020-06-12T18:45:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@201b52f7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2717" started-at="2020-06-12T18:45:29 IST" data-provider="testData" finished-at="2020-06-12T18:45:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3681037]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-02/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-02/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -17/-02/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -17/-02/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-02/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:45:32 IST" finished-at="2020-06-12T18:45:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -17/-02/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:33 IST" finished-at="2020-06-12T18:45:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@435a2c7d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:33 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2980" started-at="2020-06-12T18:45:33 IST" data-provider="testData" finished-at="2020-06-12T18:45:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6bda1d19]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 17/14/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17/14/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:45:36 IST" finished-at="2020-06-12T18:45:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17/14/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2727" started-at="2020-06-12T18:45:36 IST" data-provider="testData" finished-at="2020-06-12T18:45:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41522537]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/02/2012 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/02/2012 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 29/02/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29/02/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/02/2012
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:36 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:36 IST" finished-at="2020-06-12T18:45:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@57806346]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:45:39 IST" finished-at="2020-06-12T18:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29/02/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2709" started-at="2020-06-12T18:45:39 IST" data-provider="testData" finished-at="2020-06-12T18:45:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3ee69ad8]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:39 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:39 IST" finished-at="2020-06-12T18:45:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@40416321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:45:42 IST" finished-at="2020-06-12T18:45:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:42 IST" finished-at="2020-06-12T18:45:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3ab70d34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:42 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2736" started-at="2020-06-12T18:45:42 IST" data-provider="testData" finished-at="2020-06-12T18:45:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20de05e5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/12/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/12/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:45:45 IST" finished-at="2020-06-12T18:45:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/12/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:45 IST" finished-at="2020-06-12T18:45:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@289cf7db]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2789" started-at="2020-06-12T18:45:45 IST" data-provider="testData" finished-at="2020-06-12T18:45:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@d0865a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data $$/02/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as $$/02/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:45 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:45:48 IST" finished-at="2020-06-12T18:45:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data $$/02/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:48 IST" finished-at="2020-06-12T18:45:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7c523bdd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:48 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2698" started-at="2020-06-12T18:45:48 IST" data-provider="testData" finished-at="2020-06-12T18:45:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5b22d8a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/02/17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/02/17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:45:51 IST" finished-at="2020-06-12T18:45:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/02/17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:51 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:51 IST" finished-at="2020-06-12T18:45:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3741071d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2787" started-at="2020-06-12T18:45:51 IST" data-provider="testData" finished-at="2020-06-12T18:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[120]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@46185a1b]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:45:54 IST" finished-at="2020-06-12T18:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13 13 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:54 IST" finished-at="2020-06-12T18:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@351d726c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:54 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2810" started-at="2020-06-12T18:45:54 IST" data-provider="testData" finished-at="2020-06-12T18:45:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@25290bca]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002 12 02 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002 12 02 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002 12 02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002 12 02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002 12 02
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:45:57 IST" finished-at="2020-06-12T18:45:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002 12 02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:45:57 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:45:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:45:57 IST" finished-at="2020-06-12T18:45:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7af0693b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2725" started-at="2020-06-12T18:45:57 IST" data-provider="testData" finished-at="2020-06-12T18:46:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59dc36d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="122" started-at="2020-06-12T18:46:00 IST" finished-at="2020-06-12T18:46:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:00 IST" finished-at="2020-06-12T18:46:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1791396b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2773" started-at="2020-06-12T18:46:00 IST" data-provider="testData" finished-at="2020-06-12T18:46:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[122]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7724704f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019 2 $$ expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019 2 $$ expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2019 2 $$
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2019 2 $$
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019 2 $$
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:00 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:46:03 IST" finished-at="2020-06-12T18:46:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2019 2 $$
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:04 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:04 IST" finished-at="2020-06-12T18:46:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@28d7bd6b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2723" started-at="2020-06-12T18:46:04 IST" data-provider="testData" finished-at="2020-06-12T18:46:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53cf9c99]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 04/31/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 04/31/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 04/31/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 04/31/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 04/31/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="111" started-at="2020-06-12T18:46:07 IST" finished-at="2020-06-12T18:46:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 04/31/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:07 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2730" started-at="2020-06-12T18:46:07 IST" data-provider="testData" finished-at="2020-06-12T18:46:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@574a89e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 17 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 17 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:07 IST" finished-at="2020-06-12T18:46:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7607340f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:46:10 IST" finished-at="2020-06-12T18:46:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 17 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:10 IST" finished-at="2020-06-12T18:46:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@f472245]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2715" started-at="2020-06-12T18:46:10 IST" data-provider="testData" finished-at="2020-06-12T18:46:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2100d047]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 02/29/2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 02/29/2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/29/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/29/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 02/29/2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:10 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="115" started-at="2020-06-12T18:46:13 IST" finished-at="2020-06-12T18:46:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/29/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:13 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:13 IST" finished-at="2020-06-12T18:46:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@110318a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2730" started-at="2020-06-12T18:46:13 IST" data-provider="testData" finished-at="2020-06-12T18:46:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[124]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@37045b48]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   Apr 31 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as   Apr 31 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="112" started-at="2020-06-12T18:46:16 IST" finished-at="2020-06-12T18:46:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   Apr 31 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:17 IST" finished-at="2020-06-12T18:46:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@42ac309]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:17 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2833" started-at="2020-06-12T18:46:17 IST" data-provider="testData" finished-at="2020-06-12T18:46:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4c5228e7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -02/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -02/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:46:20 IST" finished-at="2020-06-12T18:46:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -02/-17/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:20 IST" finished-at="2020-06-12T18:46:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4b4228cf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2708" started-at="2020-06-12T18:46:20 IST" data-provider="testData" finished-at="2020-06-12T18:46:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[125]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6242ae3b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 29 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 29 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="115" started-at="2020-06-12T18:46:23 IST" finished-at="2020-06-12T18:46:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 29 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:23 IST" finished-at="2020-06-12T18:46:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7d216ee8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:23 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2721" started-at="2020-06-12T18:46:23 IST" data-provider="testData" finished-at="2020-06-12T18:46:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@791c12e3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 14/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 14/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:46:26 IST" finished-at="2020-06-12T18:46:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 14/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:26 IST" finished-at="2020-06-12T18:46:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@74ee97cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2731" started-at="2020-06-12T18:46:26 IST" data-provider="testData" finished-at="2020-06-12T18:46:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[126]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f2e1024]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17 -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17 -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb -17 -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb -17 -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17 -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:26 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:46:30 IST" finished-at="2020-06-12T18:46:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb -17 -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:30 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:30 IST" finished-at="2020-06-12T18:46:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@268e30d4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2736" started-at="2020-06-12T18:46:30 IST" data-provider="testData" finished-at="2020-06-12T18:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@141d3d43]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/29/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/29/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:46:32 IST" finished-at="2020-06-12T18:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/29/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:32 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:32 IST" finished-at="2020-06-12T18:46:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7c50709a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2754" started-at="2020-06-12T18:46:32 IST" data-provider="testData" finished-at="2020-06-12T18:46:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[127]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@71f1cc02]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 29 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 29 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:46:35 IST" finished-at="2020-06-12T18:46:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 29 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:35 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2760" started-at="2020-06-12T18:46:35 IST" data-provider="testData" finished-at="2020-06-12T18:46:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@17410c07]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:35 IST" finished-at="2020-06-12T18:46:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@af007d6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:46:38 IST" finished-at="2020-06-12T18:46:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:38 IST" finished-at="2020-06-12T18:46:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@a20898c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2758" started-at="2020-06-12T18:46:38 IST" data-provider="testData" finished-at="2020-06-12T18:46:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[128]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2fd954f]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Dec 02 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as Dec 02 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:38 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:46:41 IST" finished-at="2020-06-12T18:46:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Dec 02 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2718" started-at="2020-06-12T18:46:41 IST" data-provider="testData" finished-at="2020-06-12T18:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7be2f29a]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/12/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/12/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 02/12/0002
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:41 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:41 IST" finished-at="2020-06-12T18:46:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5dff108c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:46:44 IST" finished-at="2020-06-12T18:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/12/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2789" started-at="2020-06-12T18:46:44 IST" data-provider="testData" finished-at="2020-06-12T18:46:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[129]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3330f3ad]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$ 2019 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$ 2019 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb $$ 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb $$ 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$ 2019
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:44 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:44 IST" finished-at="2020-06-12T18:46:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@22d47f09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:46:48 IST" finished-at="2020-06-12T18:46:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb $$ 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:48 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:48 IST" finished-at="2020-06-12T18:46:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@28100232]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2833" started-at="2020-06-12T18:46:48 IST" data-provider="testData" finished-at="2020-06-12T18:46:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2e32fc22]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data $$/02/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as $$/02/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:46:51 IST" finished-at="2020-06-12T18:46:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data $$/02/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:46:51 IST" finished-at="2020-06-12T18:46:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@26728255]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2713" started-at="2020-06-12T18:46:51 IST" data-provider="testData" finished-at="2020-06-12T18:46:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@73aeef7d]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/04/31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/04/31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/04/31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/04/31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/04/31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:51 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:46:54 IST" finished-at="2020-06-12T18:46:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/04/31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:54 IST" finished-at="2020-06-12T18:46:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@32c8d67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2704" started-at="2020-06-12T18:46:54 IST" data-provider="testData" finished-at="2020-06-12T18:46:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@726934e2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/02/29 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/02/29 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010/02/29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010/02/29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/02/29
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:54 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:46:57 IST" finished-at="2020-06-12T18:46:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010/02/29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2908" started-at="2020-06-12T18:46:57 IST" data-provider="testData" finished-at="2020-06-12T18:47:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4dde8976]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-02/-17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-02/-17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009-/-02/-17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009-/-02/-17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-02/-17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:57 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:46:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:46:57 IST" finished-at="2020-06-12T18:46:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@281963c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:47:01 IST" finished-at="2020-06-12T18:47:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009-/-02/-17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:01 IST" finished-at="2020-06-12T18:47:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a2815cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3720" started-at="2020-06-12T18:47:01 IST" data-provider="testData" finished-at="2020-06-12T18:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@630bf683]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/14/17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/14/17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:01 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:47:05 IST" finished-at="2020-06-12T18:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/14/17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:05 IST" finished-at="2020-06-12T18:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@18fa5af6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:05 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2716" started-at="2020-06-12T18:47:05 IST" data-provider="testData" finished-at="2020-06-12T18:47:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@23ed382c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012/02/29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012/02/29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="119" started-at="2020-06-12T18:47:08 IST" finished-at="2020-06-12T18:47:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012/02/29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2828" started-at="2020-06-12T18:47:08 IST" data-provider="testData" finished-at="2020-06-12T18:47:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@671ea6ff]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:08 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:08 IST" finished-at="2020-06-12T18:47:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7fdabb3b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="112" started-at="2020-06-12T18:47:11 IST" finished-at="2020-06-12T18:47:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:11 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:11 IST" finished-at="2020-06-12T18:47:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7164e28a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2828" started-at="2020-06-12T18:47:11 IST" data-provider="testData" finished-at="2020-06-12T18:47:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2cd388f5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002/12/02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002/12/02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:47:14 IST" finished-at="2020-06-12T18:47:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002/12/02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:14 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:14 IST" finished-at="2020-06-12T18:47:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b881f1f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2729" started-at="2020-06-12T18:47:14 IST" data-provider="testData" finished-at="2020-06-12T18:47:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2693c618]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/02/$$ expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/02/$$ expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2019/02/$$
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2019/02/$$
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/02/$$
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:17 IST" finished-at="2020-06-12T18:47:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2019/02/$$
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:18 IST" finished-at="2020-06-12T18:47:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@51efdb72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2732" started-at="2020-06-12T18:47:18 IST" data-provider="testData" finished-at="2020-06-12T18:47:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@32d418a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:18 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:20 IST" finished-at="2020-06-12T18:47:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:20 IST" finished-at="2020-06-12T18:47:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7bc6b117]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2720" started-at="2020-06-12T18:47:20 IST" data-provider="testData" finished-at="2020-06-12T18:47:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c02670f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04/31/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04/31/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data      04/31/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as      04/31/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      04/31/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:24 IST" finished-at="2020-06-12T18:47:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data      04/31/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:24 IST" finished-at="2020-06-12T18:47:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2de07c57]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:24 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2757" started-at="2020-06-12T18:47:24 IST" data-provider="testData" finished-at="2020-06-12T18:47:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[130]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@68ab6ab0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Dec 32 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Dec 32 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="117" started-at="2020-06-12T18:47:26 IST" finished-at="2020-06-12T18:47:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Dec 32 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:27 IST" finished-at="2020-06-12T18:47:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@76cbee13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2782" started-at="2020-06-12T18:47:27 IST" data-provider="testData" finished-at="2020-06-12T18:47:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[131]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7730ef88]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 17 Feb 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17 Feb 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:27 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:29 IST" finished-at="2020-06-12T18:47:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17 Feb 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:29 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:29 IST" finished-at="2020-06-12T18:47:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@59d09ff3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2712" started-at="2020-06-12T18:47:29 IST" data-provider="testData" finished-at="2020-06-12T18:47:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[132]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@483f286e]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   31 Apr 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as   31 Apr 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:47:33 IST" finished-at="2020-06-12T18:47:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   31 Apr 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:33 IST" finished-at="2020-06-12T18:47:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@17d0d3d7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2940" started-at="2020-06-12T18:47:33 IST" data-provider="testData" finished-at="2020-06-12T18:47:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[133]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@feb098f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 Feb 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 Feb 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:33 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:47:36 IST" finished-at="2020-06-12T18:47:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 Feb 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:36 IST" finished-at="2020-06-12T18:47:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@39fc17be]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:36 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2978" started-at="2020-06-12T18:47:36 IST" data-provider="testData" finished-at="2020-06-12T18:47:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[134]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@168ad26f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -17 Feb -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -17 Feb -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="161" started-at="2020-06-12T18:47:40 IST" finished-at="2020-06-12T18:47:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -17 Feb -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:40 IST" finished-at="2020-06-12T18:47:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@106edde4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:40 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2730" started-at="2020-06-12T18:47:40 IST" data-provider="testData" finished-at="2020-06-12T18:47:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[135]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@ea00de]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 Feb 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 Feb 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:47:43 IST" finished-at="2020-06-12T18:47:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 Feb 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:43 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2796" started-at="2020-06-12T18:47:43 IST" data-provider="testData" finished-at="2020-06-12T18:47:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[136]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d9f0a5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02 Dec 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02 Dec 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:43 IST" finished-at="2020-06-12T18:47:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4d9cf71d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:46 IST" finished-at="2020-06-12T18:47:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02 Dec 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:46 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:46 IST" finished-at="2020-06-12T18:47:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5c43cb12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2723" started-at="2020-06-12T18:47:46 IST" data-provider="testData" finished-at="2020-06-12T18:47:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[137]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b97b3d2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 30 Feb 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 30 Feb 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 30 Feb 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 30 Feb 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 30 Feb 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="104" started-at="2020-06-12T18:47:49 IST" finished-at="2020-06-12T18:47:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 30 Feb 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:49 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:49 IST" finished-at="2020-06-12T18:47:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5db66c3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2820" started-at="2020-06-12T18:47:49 IST" data-provider="testData" finished-at="2020-06-12T18:47:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[138]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@608cd501]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 Feb 17 
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 Feb 17 
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:47:52 IST" finished-at="2020-06-12T18:47:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 Feb 17 
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:52 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:52 IST" finished-at="2020-06-12T18:47:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@633c0a61]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2720" started-at="2020-06-12T18:47:52 IST" data-provider="testData" finished-at="2020-06-12T18:47:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[139]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2c3158e0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Apr 31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Apr 31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 Apr 31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 Apr 31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Apr 31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:47:55 IST" finished-at="2020-06-12T18:47:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 Apr 31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:55 IST" finished-at="2020-06-12T18:47:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@49322d04]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:55 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2733" started-at="2020-06-12T18:47:55 IST" data-provider="testData" finished-at="2020-06-12T18:47:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@781aff8b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02/29/2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02/29/2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   02/29/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as   02/29/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   02/29/2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:47:59 IST" finished-at="2020-06-12T18:47:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   02/29/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:47:59 IST" finished-at="2020-06-12T18:47:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@b6b746b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:47:59 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:47:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2790" started-at="2020-06-12T18:47:59 IST" data-provider="testData" finished-at="2020-06-12T18:48:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[31]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4c319d52]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -02/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -02/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02/-17/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="160" started-at="2020-06-12T18:48:02 IST" finished-at="2020-06-12T18:48:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -02/-17/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:02 IST" finished-at="2020-06-12T18:48:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@55d8f6bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3044" started-at="2020-06-12T18:48:02 IST" data-provider="testData" finished-at="2020-06-12T18:48:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[32]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1e00bfe2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 14/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 14/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:02 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:05 IST" finished-at="2020-06-12T18:48:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 14/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:05 IST" finished-at="2020-06-12T18:48:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@56b48163]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:05 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2752" started-at="2020-06-12T18:48:05 IST" data-provider="testData" finished-at="2020-06-12T18:48:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5e85c21b]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/29/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/29/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:48:08 IST" finished-at="2020-06-12T18:48:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/29/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:08 IST" finished-at="2020-06-12T18:48:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@eb6ccbc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:08 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2814" started-at="2020-06-12T18:48:08 IST" data-provider="testData" finished-at="2020-06-12T18:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1e3f86d5]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:11 IST" finished-at="2020-06-12T18:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:11 IST" finished-at="2020-06-12T18:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5eae392d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2728" started-at="2020-06-12T18:48:11 IST" data-provider="testData" finished-at="2020-06-12T18:48:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@611d0763]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 12/02/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 12/02/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:11 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:14 IST" finished-at="2020-06-12T18:48:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 12/02/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:14 IST" finished-at="2020-06-12T18:48:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4cd1716d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2719" started-at="2020-06-12T18:48:14 IST" data-provider="testData" finished-at="2020-06-12T18:48:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2dc39b53]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:14 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:48:17 IST" finished-at="2020-06-12T18:48:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02/$$/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:48:17 IST" finished-at="2020-06-12T18:48:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3e1c5e0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2742" started-at="2020-06-12T18:48:17 IST" data-provider="testData" finished-at="2020-06-12T18:48:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[37]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2eb0cefe]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data February ,17, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as February ,17, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:17 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:20 IST" finished-at="2020-06-12T18:48:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February ,17, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:20 IST" finished-at="2020-06-12T18:48:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6f7a65e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2738" started-at="2020-06-12T18:48:20 IST" data-provider="testData" finished-at="2020-06-12T18:48:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@756808cc]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   April ,31, 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   April ,31, 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   April ,31, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as   April ,31, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   April ,31, 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:48:23 IST" finished-at="2020-06-12T18:48:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   April ,31, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2855" started-at="2020-06-12T18:48:23 IST" data-provider="testData" finished-at="2020-06-12T18:48:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[39]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7781263c]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is February ,29, 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is February ,29, 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data February ,29, 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as February ,29, 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is February ,29, 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:23 IST" finished-at="2020-06-12T18:48:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@29bf90fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:23 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:48:27 IST" finished-at="2020-06-12T18:48:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February ,29, 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:27 IST" finished-at="2020-06-12T18:48:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6e22d6bf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:48:27 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2798" started-at="2020-06-12T18:48:27 IST" data-provider="testData" finished-at="2020-06-12T18:48:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[140]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@24d8f87a]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 Feb 29  expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 Feb 29  expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010 Feb 29 
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010 Feb 29 
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010 Feb 29 
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:48:30 IST" finished-at="2020-06-12T18:48:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010 Feb 29 
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:48:30 IST" finished-at="2020-06-12T18:48:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@32121140]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2663" started-at="2020-06-12T18:48:30 IST" data-provider="testData" finished-at="2020-06-12T18:48:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[141]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6e3dd5ce]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009 Feb -17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009 Feb -17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009 Feb -17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009 Feb -17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009 Feb -17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:30 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:33 IST" finished-at="2020-06-12T18:48:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009 Feb -17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:48:33 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:33 IST" finished-at="2020-06-12T18:48:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@96c840a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2713" started-at="2020-06-12T18:48:33 IST" data-provider="testData" finished-at="2020-06-12T18:48:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[142]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6b2aafbc]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012 Feb 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012 Feb 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:48:36 IST" finished-at="2020-06-12T18:48:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012 Feb 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2677" started-at="2020-06-12T18:48:36 IST" data-provider="testData" finished-at="2020-06-12T18:48:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[143]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6568f998]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002 Dec 02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002 Dec 02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:36 IST" finished-at="2020-06-12T18:48:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5c81ddab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:36 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:48:39 IST" finished-at="2020-06-12T18:48:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002 Dec 02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:39 IST" finished-at="2020-06-12T18:48:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@24ee6faa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:39 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2824" started-at="2020-06-12T18:48:39 IST" data-provider="testData" finished-at="2020-06-12T18:48:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[144]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@760f1081]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Feb 30 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Feb 30 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009 Feb 30
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009 Feb 30
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is 2009 Feb 30
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:48:42 IST" finished-at="2020-06-12T18:48:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009 Feb 30
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2694" started-at="2020-06-12T18:48:42 IST" data-provider="testData" finished-at="2020-06-12T18:48:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[145]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7bf018dd]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 17 Feb, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17 Feb, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:42 IST" finished-at="2020-06-12T18:48:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6d4f266]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:42 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:48:45 IST" finished-at="2020-06-12T18:48:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17 Feb, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:45 IST" finished-at="2020-06-12T18:48:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6b756a62]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2706" started-at="2020-06-12T18:48:45 IST" data-provider="testData" finished-at="2020-06-12T18:48:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[146]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1600a8a2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr, 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr, 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   31 Apr, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as   31 Apr, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   31 Apr, 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:45 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="116" started-at="2020-06-12T18:48:49 IST" finished-at="2020-06-12T18:48:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   31 Apr, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:48:49 IST" finished-at="2020-06-12T18:48:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@394b9e22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:49 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2691" started-at="2020-06-12T18:48:49 IST" data-provider="testData" finished-at="2020-06-12T18:48:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[147]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@30036a18]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb, 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb, 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 Feb, 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 Feb, 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 29 Feb, 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:48:52 IST" finished-at="2020-06-12T18:48:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 Feb, 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2778" started-at="2020-06-12T18:48:52 IST" data-provider="testData" finished-at="2020-06-12T18:48:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[148]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1002d192]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb, -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb, -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -17 Feb, -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -17 Feb, -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 Feb, -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:52 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:52 IST" finished-at="2020-06-12T18:48:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6e0f259e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:55 IST" finished-at="2020-06-12T18:48:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -17 Feb, -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:55 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:55 IST" finished-at="2020-06-12T18:48:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4fe9adfb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2688" started-at="2020-06-12T18:48:55 IST" data-provider="testData" finished-at="2020-06-12T18:48:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[149]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7308c820]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 Feb, 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 Feb, 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:48:58 IST" finished-at="2020-06-12T18:48:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 Feb, 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:58 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:48:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2820" started-at="2020-06-12T18:48:58 IST" data-provider="testData" finished-at="2020-06-12T18:49:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@474e34e4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is February , -17, -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is February , -17, -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data February , -17, -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as February , -17, -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is February , -17, -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:48:58 IST" finished-at="2020-06-12T18:48:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@f8fe81e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:49:02 IST" finished-at="2020-06-12T18:49:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February , -17, -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:49:02 IST" finished-at="2020-06-12T18:49:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6ad0cd43]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:02 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2715" started-at="2020-06-12T18:49:02 IST" data-provider="testData" finished-at="2020-06-12T18:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[41]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@781c2497]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data February , 29, 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as February , 29, 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:49:04 IST" finished-at="2020-06-12T18:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February , 29, 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:04 IST" finished-at="2020-06-12T18:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7de43652]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2709" started-at="2020-06-12T18:49:04 IST" data-provider="testData" finished-at="2020-06-12T18:49:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2de3b052]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data December, 02, 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as December, 02, 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:04 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:49:07 IST" finished-at="2020-06-12T18:49:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data December, 02, 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:07 IST" finished-at="2020-06-12T18:49:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7fe0ca60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2763" started-at="2020-06-12T18:49:07 IST" data-provider="testData" finished-at="2020-06-12T18:49:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[43]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@446c8c72]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is February , $$ , 2019 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is February , $$ , 2019 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data February , $$ , 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as February , $$ , 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is February , $$ , 2019
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:07 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:49:11 IST" finished-at="2020-06-12T18:49:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February , $$ , 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:11 IST" finished-at="2020-06-12T18:49:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@fdf029a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:11 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2732" started-at="2020-06-12T18:49:11 IST" data-provider="testData" finished-at="2020-06-12T18:49:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[44]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4c2ab536]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is February ,30 ,2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is February ,30 ,2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data February ,30 ,2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as February ,30 ,2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 02 2009 00:00:00 GMT+0000 ] for Enter value is February ,30 ,2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:49:14 IST" finished-at="2020-06-12T18:49:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data February ,30 ,2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:49:14 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:14 IST" finished-at="2020-06-12T18:49:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@63896cf7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2743" started-at="2020-06-12T18:49:14 IST" data-provider="testData" finished-at="2020-06-12T18:49:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ff498b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data December, 32, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as December, 32, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:49:17 IST" finished-at="2020-06-12T18:49:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data December, 32, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:17 IST" finished-at="2020-06-12T18:49:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3f838072]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2833" started-at="2020-06-12T18:49:17 IST" data-provider="testData" finished-at="2020-06-12T18:49:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4cfcac13]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:17 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:49:20 IST" finished-at="2020-06-12T18:49:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:49:20 IST" finished-at="2020-06-12T18:49:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@46c9ee28]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3474" started-at="2020-06-12T18:49:20 IST" data-provider="testData" finished-at="2020-06-12T18:49:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[47]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f45db49]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      4/31/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      4/31/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data      4/31/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as      4/31/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is      4/31/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:49:24 IST" finished-at="2020-06-12T18:49:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data      4/31/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:24 IST" finished-at="2020-06-12T18:49:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@31f5ffb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2802" started-at="2020-06-12T18:49:24 IST" data-provider="testData" finished-at="2020-06-12T18:49:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[48]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@58186f9f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   2/29/2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   2/29/2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   2/29/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as   2/29/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is   2/29/2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:24 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="172" started-at="2020-06-12T18:49:27 IST" finished-at="2020-06-12T18:49:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   2/29/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:27 IST" finished-at="2020-06-12T18:49:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@19b3d3a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2835" started-at="2020-06-12T18:49:27 IST" data-provider="testData" finished-at="2020-06-12T18:49:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[49]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6ba060af]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2/-17/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2/-17/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2/-17/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:27 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:49:31 IST" finished-at="2020-06-12T18:49:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2/-17/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:31 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:31 IST" finished-at="2020-06-12T18:49:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3a9040f0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2985" started-at="2020-06-12T18:49:31 IST" data-provider="testData" finished-at="2020-06-12T18:49:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[150]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@49d42faf]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02 Dec, 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02 Dec, 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="110" started-at="2020-06-12T18:49:34 IST" finished-at="2020-06-12T18:49:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02 Dec, 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2762" started-at="2020-06-12T18:49:34 IST" data-provider="testData" finished-at="2020-06-12T18:49:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[151]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@44eb2452]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 32 Dec, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 32 Dec, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:34 IST" finished-at="2020-06-12T18:49:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@33214124]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:34 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:49:37 IST" finished-at="2020-06-12T18:49:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 32 Dec, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:37 IST" finished-at="2020-06-12T18:49:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2d3768ce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:49:37 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2804" started-at="2020-06-12T18:49:37 IST" data-provider="testData" finished-at="2020-06-12T18:49:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[152]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54bb1194]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009, Feb 17 
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009, Feb 17 
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:49:40 IST" finished-at="2020-06-12T18:49:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009, Feb 17 
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:40 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:40 IST" finished-at="2020-06-12T18:49:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a9ea03f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2701" started-at="2020-06-12T18:49:40 IST" data-provider="testData" finished-at="2020-06-12T18:49:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[153]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d088813]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009, Apr 31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009, Apr 31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009, Apr 31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009, Apr 31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009, Apr 31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:49:43 IST" finished-at="2020-06-12T18:49:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009, Apr 31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2985" started-at="2020-06-12T18:49:43 IST" data-provider="testData" finished-at="2020-06-12T18:49:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[154]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5d2e6f62]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010, Feb 29  expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010, Feb 29  expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010, Feb 29 
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010, Feb 29 
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010, Feb 29 
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:43 IST" finished-at="2020-06-12T18:49:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1231f25c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:43 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:49:47 IST" finished-at="2020-06-12T18:49:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010, Feb 29 
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:47 IST" finished-at="2020-06-12T18:49:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2ba0b95f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:47 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2694" started-at="2020-06-12T18:49:47 IST" data-provider="testData" finished-at="2020-06-12T18:49:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2a5c6b76]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009, Feb -17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009, Feb -17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009, Feb -17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009, Feb -17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009, Feb -17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:49:50 IST" finished-at="2020-06-12T18:49:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009, Feb -17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2694" started-at="2020-06-12T18:49:50 IST" data-provider="testData" finished-at="2020-06-12T18:49:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[156]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@338d47b]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012, Feb 29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012, Feb 29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:50 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:50 IST" finished-at="2020-06-12T18:49:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3dc7c5fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:49:53 IST" finished-at="2020-06-12T18:49:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012, Feb 29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:53 IST" finished-at="2020-06-12T18:49:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@62871522]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:53 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2769" started-at="2020-06-12T18:49:53 IST" data-provider="testData" finished-at="2020-06-12T18:49:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[157]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3c9e19de]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002, Dec 02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002, Dec 02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:49:56 IST" finished-at="2020-06-12T18:49:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002, Dec 02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2697" started-at="2020-06-12T18:49:56 IST" data-provider="testData" finished-at="2020-06-12T18:49:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[158]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1c2096c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  2009, Dec 32 
]]>
            </line>
            <line>
              <![CDATA[Entered value as  2009, Dec 32 
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:56 IST" finished-at="2020-06-12T18:49:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7fb9a83c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:56 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:49:58 IST" finished-at="2020-06-12T18:49:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  2009, Dec 32 
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:59 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:49:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2684" started-at="2020-06-12T18:49:59 IST" data-provider="testData" finished-at="2020-06-12T18:50:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@191e654]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 17, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 17, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:49:59 IST" finished-at="2020-06-12T18:49:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@517d9cd5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:50:01 IST" finished-at="2020-06-12T18:50:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 17, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:01 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2797" started-at="2020-06-12T18:50:01 IST" data-provider="testData" finished-at="2020-06-12T18:50:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7a1ddbf1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2/29/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2/29/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:01 IST" finished-at="2020-06-12T18:50:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5216532a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="116" started-at="2020-06-12T18:50:04 IST" finished-at="2020-06-12T18:50:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2/29/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:04 IST" finished-at="2020-06-12T18:50:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@862624f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:04 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2757" started-at="2020-06-12T18:50:04 IST" data-provider="testData" finished-at="2020-06-12T18:50:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[51]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3bf5911d]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/1/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/1/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="104" started-at="2020-06-12T18:50:07 IST" finished-at="2020-06-12T18:50:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/1/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2681" started-at="2020-06-12T18:50:07 IST" data-provider="testData" finished-at="2020-06-12T18:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[52]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@25f7cc38]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 12/2/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 12/2/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:07 IST" finished-at="2020-06-12T18:50:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3aa8c337]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:07 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:50:10 IST" finished-at="2020-06-12T18:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 12/2/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:50:10 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:10 IST" finished-at="2020-06-12T18:50:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@78e7b83]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2679" started-at="2020-06-12T18:50:10 IST" data-provider="testData" finished-at="2020-06-12T18:50:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[53]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@553fbe94]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:50:13 IST" finished-at="2020-06-12T18:50:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2/$$/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:13 IST" finished-at="2020-06-12T18:50:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6761f75b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2684" started-at="2020-06-12T18:50:13 IST" data-provider="testData" finished-at="2020-06-12T18:50:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[54]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3c7d8a4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/2/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/2/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 17/2/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17/2/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17/2/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:13 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:50:16 IST" finished-at="2020-06-12T18:50:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17/2/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2688" started-at="2020-06-12T18:50:16 IST" data-provider="testData" finished-at="2020-06-12T18:50:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f48fa72]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 31/4/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 31/4/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:16 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:16 IST" finished-at="2020-06-12T18:50:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7c8a91e2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:50:19 IST" finished-at="2020-06-12T18:50:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 31/4/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:19 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2821" started-at="2020-06-12T18:50:19 IST" data-provider="testData" finished-at="2020-06-12T18:50:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[56]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53525379]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 29/2/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29/2/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:19 IST" finished-at="2020-06-12T18:50:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@c7443f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:50:22 IST" finished-at="2020-06-12T18:50:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29/2/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:50:22 IST" finished-at="2020-06-12T18:50:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@74e175c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:22 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2697" started-at="2020-06-12T18:50:22 IST" data-provider="testData" finished-at="2020-06-12T18:50:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[57]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1f5d7fd5]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-2/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-2/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -17/-2/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -17/-2/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17/-2/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:50:25 IST" finished-at="2020-06-12T18:50:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -17/-2/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:25 IST" finished-at="2020-06-12T18:50:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1c528f2f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:50:25 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3534" started-at="2020-06-12T18:50:25 IST" data-provider="testData" finished-at="2020-06-12T18:50:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[58]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@adc8683]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 17/14/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17/14/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:50:29 IST" finished-at="2020-06-12T18:50:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17/14/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2680" started-at="2020-06-12T18:50:29 IST" data-provider="testData" finished-at="2020-06-12T18:50:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@210c1b9d]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/2/2012 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/2/2012 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 29/2/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29/2/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 29/2/2012
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:29 IST" finished-at="2020-06-12T18:50:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@34ff08c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:29 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:50:32 IST" finished-at="2020-06-12T18:50:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29/2/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:32 IST" finished-at="2020-06-12T18:50:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@e2344da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2710" started-at="2020-06-12T18:50:32 IST" data-provider="testData" finished-at="2020-06-12T18:50:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[160]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b50c21]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31, 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31, 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data   Apr 31, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as   Apr 31, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is   Apr 31, 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:32 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="144" started-at="2020-06-12T18:50:35 IST" finished-at="2020-06-12T18:50:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data   Apr 31, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:35 IST" finished-at="2020-06-12T18:50:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@71135794]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:35 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2967" started-at="2020-06-12T18:50:35 IST" data-provider="testData" finished-at="2020-06-12T18:50:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[161]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7434ee13]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29, 2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29, 2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 29, 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 29, 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is Feb 29, 2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="116" started-at="2020-06-12T18:50:39 IST" finished-at="2020-06-12T18:50:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 29, 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2754" started-at="2020-06-12T18:50:39 IST" data-provider="testData" finished-at="2020-06-12T18:50:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[162]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@38ebc866]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17, -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17, -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb -17, -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb -17, -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is Feb -17, -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:39 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:39 IST" finished-at="2020-06-12T18:50:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@79b0956e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:50:42 IST" finished-at="2020-06-12T18:50:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb -17, -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:42 IST" finished-at="2020-06-12T18:50:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@35451ba6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:42 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2777" started-at="2020-06-12T18:50:42 IST" data-provider="testData" finished-at="2020-06-12T18:50:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[163]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5af40e45]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb 29, 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb 29, 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="127" started-at="2020-06-12T18:50:45 IST" finished-at="2020-06-12T18:50:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb 29, 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:45 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:45 IST" finished-at="2020-06-12T18:50:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@21d48c40]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2735" started-at="2020-06-12T18:50:45 IST" data-provider="testData" finished-at="2020-06-12T18:50:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[164]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@22429a11]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Dec 02, 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as Dec 02, 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:50:48 IST" finished-at="2020-06-12T18:50:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Dec 02, 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:50:48 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:48 IST" finished-at="2020-06-12T18:50:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4a10c019]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2723" started-at="2020-06-12T18:50:48 IST" data-provider="testData" finished-at="2020-06-12T18:50:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[165]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5eee3da9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$, 2019 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$, 2019 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data Feb $$, 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as Feb $$, 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is Feb $$, 2019
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="118" started-at="2020-06-12T18:50:51 IST" finished-at="2020-06-12T18:50:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Feb $$, 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:52 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:52 IST" finished-at="2020-06-12T18:50:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@37f627d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2775" started-at="2020-06-12T18:50:52 IST" data-provider="testData" finished-at="2020-06-12T18:50:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[166]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6b0ba697]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data Dec 32, 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as Dec 32, 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:50:54 IST" finished-at="2020-06-12T18:50:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data Dec 32, 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:54 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2702" started-at="2020-06-12T18:50:54 IST" data-provider="testData" finished-at="2020-06-12T18:50:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[60]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@450d10cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:54 IST" finished-at="2020-06-12T18:50:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a7392a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:50:57 IST" finished-at="2020-06-12T18:50:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:57 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:50:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:50:57 IST" finished-at="2020-06-12T18:50:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2fc0ad21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2812" started-at="2020-06-12T18:50:57 IST" data-provider="testData" finished-at="2020-06-12T18:51:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[61]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4ff9f715]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2/12/0002 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2/12/0002 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2/12/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2/12/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 2/12/0002
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:51:01 IST" finished-at="2020-06-12T18:51:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2/12/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:01 IST" finished-at="2020-06-12T18:51:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@639cb0c8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2729" started-at="2020-06-12T18:51:01 IST" data-provider="testData" finished-at="2020-06-12T18:51:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[62]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@a7ae340]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/2/17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/2/17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:01 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:51:03 IST" finished-at="2020-06-12T18:51:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/2/17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:04 IST" finished-at="2020-06-12T18:51:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@65d2d3cc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2819" started-at="2020-06-12T18:51:04 IST" data-provider="testData" finished-at="2020-06-12T18:51:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[63]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@40dee07b]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/4/31 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/4/31 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/4/31
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/4/31
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is 2009/4/31
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:04 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:51:07 IST" finished-at="2020-06-12T18:51:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/4/31
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:07 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2800" started-at="2020-06-12T18:51:07 IST" data-provider="testData" finished-at="2020-06-12T18:51:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@257b3561]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/2/29 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/2/29 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2010/2/29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2010/2/29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is 2010/2/29
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:07 IST" finished-at="2020-06-12T18:51:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5382a35f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:51:10 IST" finished-at="2020-06-12T18:51:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2010/2/29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:10 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:10 IST" finished-at="2020-06-12T18:51:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7901a5ab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2754" started-at="2020-06-12T18:51:10 IST" data-provider="testData" finished-at="2020-06-12T18:51:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[65]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54bc3bcf]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-2/-17 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-2/-17 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -2009-/-2/-17
]]>
            </line>
            <line>
              <![CDATA[Entered value as -2009-/-2/-17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -2009-/-2/-17
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:51:14 IST" finished-at="2020-06-12T18:51:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -2009-/-2/-17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:14 IST" finished-at="2020-06-12T18:51:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7f9d40b3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:51:14 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2711" started-at="2020-06-12T18:51:14 IST" data-provider="testData" finished-at="2020-06-12T18:51:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[66]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@66b90ab3]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2009/14/17
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2009/14/17
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:51:17 IST" finished-at="2020-06-12T18:51:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2009/14/17
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:17 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2752" started-at="2020-06-12T18:51:17 IST" data-provider="testData" finished-at="2020-06-12T18:51:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[67]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@57afe44b]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 2012/2/29
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2012/2/29
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:17 IST" finished-at="2020-06-12T18:51:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@ca2a03f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:51:19 IST" finished-at="2020-06-12T18:51:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2012/2/29
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:51:20 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:20 IST" finished-at="2020-06-12T18:51:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4a7c72af]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2731" started-at="2020-06-12T18:51:20 IST" data-provider="testData" finished-at="2020-06-12T18:51:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[68]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3c65f00e]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13/13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:51:22 IST" finished-at="2020-06-12T18:51:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13/13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:51:22 IST" finished-at="2020-06-12T18:51:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3e24bab6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:22 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2700" started-at="2020-06-12T18:51:22 IST" data-provider="testData" finished-at="2020-06-12T18:51:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[69]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@642c5bb3]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 0002/12/02
]]>
            </line>
            <line>
              <![CDATA[Entered value as 0002/12/02
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is 0002/12/02
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="111" started-at="2020-06-12T18:51:26 IST" finished-at="2020-06-12T18:51:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 0002/12/02
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2700" started-at="2020-06-12T18:51:26 IST" data-provider="testData" finished-at="2020-06-12T18:51:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[70]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59b853aa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/2/$$ expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/2/$$ expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 2019/2/$$
]]>
            </line>
            <line>
              <![CDATA[Entered value as 2019/2/$$
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri Feb 01 2019 00:00:00 GMT+0000 ] for Enter value is 2019/2/$$
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:26 IST" finished-at="2020-06-12T18:51:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2ba9ed19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:26 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:51:29 IST" finished-at="2020-06-12T18:51:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 2019/2/$$
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:29 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2711" started-at="2020-06-12T18:51:29 IST" data-provider="testData" finished-at="2020-06-12T18:51:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[71]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@414e8b31]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  2/17/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as  2/17/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:29 IST" finished-at="2020-06-12T18:51:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3293030b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:51:32 IST" finished-at="2020-06-12T18:51:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  2/17/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:32 IST" finished-at="2020-06-12T18:51:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b53e6fc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2843" started-at="2020-06-12T18:51:32 IST" data-provider="testData" finished-at="2020-06-12T18:51:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[72]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@52efb338]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is       4/31/2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is       4/31/2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data       4/31/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as       4/31/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Fri May 01 2009 00:00:00 GMT+0000 ] for Enter value is       4/31/2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:32 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:51:35 IST" finished-at="2020-06-12T18:51:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data       4/31/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:35 IST" finished-at="2020-06-12T18:51:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@391e2a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3065" started-at="2020-06-12T18:51:35 IST" data-provider="testData" finished-at="2020-06-12T18:51:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[73]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@c697186]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is    2/29/2010 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is    2/29/2010 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data    2/29/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as    2/29/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Invalid Date ] instead of [ Mon Mar 01 2010 00:00:00 GMT+0000 ] for Enter value is    2/29/2010
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:35 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="104" started-at="2020-06-12T18:51:39 IST" finished-at="2020-06-12T18:51:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data    2/29/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2717" started-at="2020-06-12T18:51:39 IST" data-provider="testData" finished-at="2020-06-12T18:51:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[74]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f7c9755]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -2/-17/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -2/-17/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data  -2/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as  -2/-17/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -2/-17/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:39 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:39 IST" finished-at="2020-06-12T18:51:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@641cea11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:51:42 IST" finished-at="2020-06-12T18:51:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  -2/-17/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:42 IST" finished-at="2020-06-12T18:51:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4e3d36c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:42 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2759" started-at="2020-06-12T18:51:42 IST" data-provider="testData" finished-at="2020-06-12T18:51:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[75]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6f976c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  2/29/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as  2/29/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:51:45 IST" finished-at="2020-06-12T18:51:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  2/29/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:45 IST" finished-at="2020-06-12T18:51:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4add4dff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:45 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2759" started-at="2020-06-12T18:51:45 IST" data-provider="testData" finished-at="2020-06-12T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[76]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3c4c7e51]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  13/ 1/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as  13/ 1/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:51:48 IST" finished-at="2020-06-12T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  13/ 1/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:51:48 IST" finished-at="2020-06-12T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@25dc2c0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:48 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2743" started-at="2020-06-12T18:51:48 IST" data-provider="testData" finished-at="2020-06-12T18:51:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6b278b17]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 12/ 2/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 12/ 2/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:51:51 IST" finished-at="2020-06-12T18:51:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 12/ 2/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:51 IST" finished-at="2020-06-12T18:51:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@192ecf8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:51:51 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2766" started-at="2020-06-12T18:51:51 IST" data-provider="testData" finished-at="2020-06-12T18:51:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[78]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@54e06788]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  2/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as  2/$$/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:51:54 IST" finished-at="2020-06-12T18:51:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  2/$$/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2801" started-at="2020-06-12T18:51:54 IST" data-provider="testData" finished-at="2020-06-12T18:51:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5c9e6d95]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 / 2 /2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 / 2 /2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 17 / 2 /2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17 / 2 /2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 / 2 /2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:54 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:54 IST" finished-at="2020-06-12T18:51:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@263e512e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:51:57 IST" finished-at="2020-06-12T18:51:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17 / 2 /2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2816" started-at="2020-06-12T18:51:57 IST" data-provider="testData" finished-at="2020-06-12T18:52:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@455d04d2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02 -17 -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02 -17 -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -02 -17 -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -02 -17 -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -02 -17 -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:57 IST" finished-at="2020-06-12T18:51:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@62c42a3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:51:57 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:51:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:01 IST" finished-at="2020-06-12T18:52:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -02 -17 -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2816" started-at="2020-06-12T18:52:01 IST" data-provider="testData" finished-at="2020-06-12T18:52:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@48aaaed9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 14 17 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 14 17 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:01 IST" finished-at="2020-06-12T18:52:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6a8bcb64]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:01 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="114" started-at="2020-06-12T18:52:04 IST" finished-at="2020-06-12T18:52:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 14 17 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:04 IST" finished-at="2020-06-12T18:52:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7c680fe1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:04 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3292" started-at="2020-06-12T18:52:04 IST" data-provider="testData" finished-at="2020-06-12T18:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[102]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59ac77f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02 29 2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02 29 2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:07 IST" finished-at="2020-06-12T18:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02 29 2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:07 IST" finished-at="2020-06-12T18:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@288b8663]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:52:07 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2840" started-at="2020-06-12T18:52:07 IST" data-provider="testData" finished-at="2020-06-12T18:52:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[103]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6a3a56de]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 13 13 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:10 IST" finished-at="2020-06-12T18:52:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 13 13 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:10 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:10 IST" finished-at="2020-06-12T18:52:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4cd6f08b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2726" started-at="2020-06-12T18:52:10 IST" data-provider="testData" finished-at="2020-06-12T18:52:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[104]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@535a6697]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 12 02 0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as 12 02 0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:13 IST" finished-at="2020-06-12T18:52:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 12 02 0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:13 IST" finished-at="2020-06-12T18:52:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@78b2d29e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2787" started-at="2020-06-12T18:52:13 IST" data-provider="testData" finished-at="2020-06-12T18:52:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[105]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@362c48c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 02 $$ 2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as 02 $$ 2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:13 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:16 IST" finished-at="2020-06-12T18:52:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 02 $$ 2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:16 IST" finished-at="2020-06-12T18:52:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4419cd6e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:16 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2715" started-at="2020-06-12T18:52:16 IST" data-provider="testData" finished-at="2020-06-12T18:52:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[106]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@574327ed]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 2 2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 2 2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data 17 2 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 17 2 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is 17 2 2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:52:19 IST" finished-at="2020-06-12T18:52:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 17 2 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:19 IST" finished-at="2020-06-12T18:52:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3055f310]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2756" started-at="2020-06-12T18:52:19 IST" data-provider="testData" finished-at="2020-06-12T18:52:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[80]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@45753c22]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  31/ 4/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as  31/ 4/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:19 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:52:22 IST" finished-at="2020-06-12T18:52:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  31/ 4/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:22 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2697" started-at="2020-06-12T18:52:22 IST" data-provider="testData" finished-at="2020-06-12T18:52:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[107]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3a45308f]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 31 4 2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as 31 4 2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:22 IST" finished-at="2020-06-12T18:52:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4b7c0f39]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:52:25 IST" finished-at="2020-06-12T18:52:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 31 4 2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2949" started-at="2020-06-12T18:52:25 IST" data-provider="testData" finished-at="2020-06-12T18:52:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[81]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1fb30e5d]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  29/ 2/2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as  29/ 2/2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:25 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:25 IST" finished-at="2020-06-12T18:52:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@25b402ea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:28 IST" finished-at="2020-06-12T18:52:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  29/ 2/2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2731" started-at="2020-06-12T18:52:28 IST" data-provider="testData" finished-at="2020-06-12T18:52:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[108]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2c557eee]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data 29 2 2010
]]>
            </line>
            <line>
              <![CDATA[Entered value as 29 2 2010
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:28 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:28 IST" finished-at="2020-06-12T18:52:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@2fccd98f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="112" started-at="2020-06-12T18:52:31 IST" finished-at="2020-06-12T18:52:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data 29 2 2010
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:31 IST" finished-at="2020-06-12T18:52:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@309e7215]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2867" started-at="2020-06-12T18:52:31 IST" data-provider="testData" finished-at="2020-06-12T18:52:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[82]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4cefa0be]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -17/ -2/-2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -17/ -2/-2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data  -17/ -2/-2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as  -17/ -2/-2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  -17/ -2/-2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:31 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="106" started-at="2020-06-12T18:52:34 IST" finished-at="2020-06-12T18:52:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  -17/ -2/-2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="1" started-at="2020-06-12T18:52:34 IST" finished-at="2020-06-12T18:52:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b30b6f8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:34 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2737" started-at="2020-06-12T18:52:34 IST" data-provider="testData" finished-at="2020-06-12T18:52:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[109]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7c8f803d]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 -2 -2009 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 -2 -2009 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data -17 -2 -2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as -17 -2 -2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Tue Feb 17 2009 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Tue Feb 17 2009 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is -17 -2 -2009
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:52:37 IST" finished-at="2020-06-12T18:52:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data -17 -2 -2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:38 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2784" started-at="2020-06-12T18:52:38 IST" data-provider="testData" finished-at="2020-06-12T18:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[83]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7db2b614]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  17/ 14/2009
]]>
            </line>
            <line>
              <![CDATA[Entered value as  17/ 14/2009
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:38 IST" finished-at="2020-06-12T18:52:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@1e965426]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="113" started-at="2020-06-12T18:52:40 IST" finished-at="2020-06-12T18:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  17/ 14/2009
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2795" started-at="2020-06-12T18:52:40 IST" data-provider="testData" finished-at="2020-06-12T18:52:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[84]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5d202dc4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  29/ 2/2012 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  29/ 2/2012 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data  29/ 2/2012
]]>
            </line>
            <line>
              <![CDATA[Entered value as  29/ 2/2012
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Wed Feb 29 2012 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Wed Feb 29 2012 00:00:00 GMT+0000 ] instead of [ Invalid date ] for Enter value is  29/ 2/2012
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:40 IST" finished-at="2020-06-12T18:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@575fe6da]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:40 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="105" started-at="2020-06-12T18:52:44 IST" finished-at="2020-06-12T18:52:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  29/ 2/2012
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:44 IST" finished-at="2020-06-12T18:52:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@149238fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="1" started-at="2020-06-12T18:52:44 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2756" started-at="2020-06-12T18:52:44 IST" data-provider="testData" finished-at="2020-06-12T18:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[85]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@46d51d5e]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  13/ 13/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as  13/ 13/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="108" started-at="2020-06-12T18:52:47 IST" finished-at="2020-06-12T18:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  13/ 13/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:47 IST" finished-at="2020-06-12T18:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@a0bdbe2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:47 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="2731" started-at="2020-06-12T18:52:47 IST" data-provider="testData" finished-at="2020-06-12T18:52:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7348e75e]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is  02/ 12/0002 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is  02/ 12/0002 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at test.propin.TestDateParsing.verifyDateParse(TestDateParsing.java:35)
at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Enter data  02/ 12/0002
]]>
            </line>
            <line>
              <![CDATA[Entered value as  02/ 12/0002
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Mon Dec 02 2002 00:00:00 GMT+0000
]]>
            </line>
            <line>
              <![CDATA[ 
 Verification failed getting parsing result as [ Mon Dec 02 2002 00:00:00 GMT+0000 ] instead of [ Tue Feb 12 2002 00:00:00 GMT+0000 ] for Enter value is  02/ 12/0002
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="109" started-at="2020-06-12T18:52:50 IST" finished-at="2020-06-12T18:52:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=FAILURE method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  02/ 12/0002
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="getActualData([Ljava.lang.Object;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="getActualData" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:50 IST" finished-at="2020-06-12T18:52:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@261099e1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getActualData -->
        <test-method status="PASS" signature="verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="verifyDateParse" duration-ms="3110" started-at="2020-06-12T18:52:50 IST" data-provider="testData" finished-at="2020-06-12T18:52:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[87]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3462e99a]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Enter data  $$/ 2/2019
]]>
            </line>
            <line>
              <![CDATA[Entered value as  $$/ 2/2019
]]>
            </line>
            <line>
              <![CDATA[Tap on Submit
]]>
            </line>
            <line>
              <![CDATA[Submitted
]]>
            </line>
            <line>
              <![CDATA[Verify that parsing result should shown as Invalid Date
]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyDateParse -->
        <test-method status="PASS" signature="startTest(java.lang.reflect.Method)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="startTest" is-config="true" duration-ms="0" started-at="2020-06-12T18:52:50 IST" depends-on-methods="prop.commonUtility.CommonPreAndPostConditions.getActualData" finished-at="2020-06-12T18:52:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.propin.TestDateParsing.verifyDateParse(java.lang.String,java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="storeResult(org.testng.ITestResult)[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="storeResult" is-config="true" duration-ms="107" started-at="2020-06-12T18:52:53 IST" finished-at="2020-06-12T18:52:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateParse status=SUCCESS method=TestDateParsing.verifyDateParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:test.propin.TestDateParsing@3f67593e] output=Enter data  $$/ 2/2019
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeResult -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:test.propin.TestDateParsing@3f67593e]" name="closeBrowser" is-config="true" duration-ms="126" started-at="2020-06-12T18:52:53 IST" finished-at="2020-06-12T18:52:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- test.propin.TestDateParsing -->
    </test> <!-- TestDataParsing -->
  </suite> <!-- propinTest -->
</testng-results>
